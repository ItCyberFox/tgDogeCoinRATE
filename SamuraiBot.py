import requests
from datetime import datetime
import telebot
from auth_data import token
import traceback


# ----------------------—Ç—É—Ç –∑–∞–ø—Ä–æ—Å—ã –∫ API –±–∏—Ä–∂–µ –∏ —É–∑–Ω–∞–µ—Ç –∫—É—Ä—Å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç-----------------------------------------------


def get_doge():
    req = requests.get("https://yobit.net/api/3/ticker/doge_usd")
    response = req.json()
    sell_price = response["doge_usd"]["sell"]
    print(f"{datetime.now().strftime('%Y-%m-%d %H:%M')}\nSell DOGE price: {sell_price}")


def get_btc():
    req = requests.get("https://yobit.net/api/3/ticker/btc_usd")
    response = req.json()
    sell_price = response["btc_usd"]["sell"]
    print(f"{datetime.now().strftime('%Y-%m-%d %H:%M')}\nSell BTC price: {sell_price}")


def get_eth():
    req = requests.get("https://yobit.net/api/3/ticker/eth_usd")
    response = req.json()
    sell_price = response["eth_usd"]["sell"]
    print(f"{datetime.now().strftime('%Y-%m-%d %H:%M')}\nSell ETH price: {sell_price}")





# ---------------------------—Ç—É—Ç —Å—Ç–∞—Ä—Ç–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å –±–æ—Ç–æ–º--------------------------------------------------


bot = telebot.TeleBot(token)


@bot.message_handler(commands=["start"])
def start_message(message):
    bot.send_message(message.chat.id, "–≠—Ç–æ—Ç —Å–∞–º—É—Ä–∞–π –ø–æ–∫–∞ –º–∞–ª–æ —á—Ç–æ –º–æ–∂–µ—Ç, –Ω–æ —è —Ä–∞–±–æ—Ç–∞—é –Ω–∞–¥ –µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º. –ù–∞–ø–∏—à–∏ /ls")


@bot.message_handler(commands=["ls"])
def main_message(message):
    bot.send_message(message.chat.id, "/rate-–∫—É—Ä—Å—ã –∫—Ä–∏–ø—Ç—ãüî£\n/help - –ø–æ–º–æ—â—åüóø\n/file - —Ñ–∞–π–ª–æ—Ö—Ä–∞–Ω–∏–ª–∏—â–µüì¶")


@bot.message_handler(commands=["help"])
def help_message(message):
    bot.send_message(message.chat.id, "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–º–æ—â–∏ –Ω–∞–ø–∏—à–∏—Ç–µ @Code_Samurai")


# -----------------------–≤—ã–≤–æ–¥–∏—Ç –Ω–∞ –≤—ã–±–æ—Ä 3 –º–æ–Ω–µ—Ç—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∏—Ö –∫—É—Ä—Å–µ---------------------------------


@bot.message_handler(commands=["rate"])
def start_message(message):
    bot.send_message(message.chat.id, "/doge - |DogeCoin \n/btc -  |BitCoin \n/eth - |Ethereum")


# ----------------------–∫–æ–º–∞–Ω–¥—ã –¥–ª—è –≤—ã–≤–æ–¥–∞ –∫—É—Ä—Å–∞ –º–æ–Ω–µ—Ç------------------------------------------------------------------
@bot.message_handler(commands=["doge"])
def doge_text(message):
    try:
        req = requests.get("https://yobit.net/api/3/ticker/doge_usd")
        response = req.json()
        sell_price = response["doge_usd"]["sell"]
        bot.send_message(
            message.chat.id,
            f"{datetime.now().strftime('%Y-%m-%d %H:%M')}\nSell DOGE price: {sell_price}"
        )


    except Exception as e:
        traceback.print_exc(e)
        bot.send_message(
            message.chat.id,
            "Damn...Something was wrong..."
        )


@bot.message_handler(commands=["btc"])
def btc_text(message):
    try:
        req = requests.get("https://yobit.net/api/3/ticker/btc_usd")
        response = req.json()
        sell_price = response["btc_usd"]["sell"]
        bot.send_message(
            message.chat.id,
            f"{datetime.now().strftime('%Y-%m-%d %H:%M')}\nSell BTC price: {sell_price}"
        )


    except Exception as e:
        traceback.print_exc(e)
        bot.send_message(
            message.chat.id,
            "Damn...Something was wrong..."
        )


@bot.message_handler(commands=["eth"])
def eth_text(message):
    try:
        req = requests.get("https://yobit.net/api/3/ticker/eth_usd")
        response = req.json()
        sell_price = response["eth_usd"]["sell"]
        bot.send_message(
            message.chat.id,
            f"{datetime.now().strftime('%Y-%m-%d %H:%M')}\nSell ETH price: {sell_price}"
        )

    except Exception as e:
        traceback.print_exc(e)
        bot.send_message(
            message.chat.id,
            "Damn...Something was wrong..."
        )


# --------------------------------------------------—Ç—É—Ç –≤—Å–µ —á—Ç–æ —Å–≤—è–∑–∞–Ω–Ω–æ —Å –æ—Ç–ø—Ä–∞–≤–∫–æ–π —Ñ–æ—Ç–æ –∏ —Ñ–∞–π–ª–∞–º–∏---------------------


# @bot.message_handler(commands=["photo"])
# def photo(message):
#   """
#
#   :type message: photo
#  """
# with open(r"C:\Users\te1ho\Desktop\tmp\1234.jpg", "rb") as photo:
#    bot.send_photo(message.chat.id, photo)
# ----------------------------–Ω–∏–∂–µ –±–æ—Ç —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø–æ —É–∫–∞–∑–∞–Ω–æ–º—É –ø—É—Ç–∏ —Ñ–∞–π–ª—ã –∫–æ—Ç–æ—Ä—ã–µ –µ–º—É –æ—Ç–ø—Ä–∞–≤—è—Ç---------------------------



@bot.message_handler(content_types=["document", "video", "audio"])
def handle_files(message):
    try:
        document_id = message.document.file_id
        file_info = bot.get_file(document_id)

        print(document_id)  # –í—ã–≤–æ–¥–∏–º file_id
        print(f'http://api.telegram.org/file/bot{token}/{file_info.file_path}')  # –í—ã–≤–æ–¥–∏–º —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–∞–π–ª

        bot.send_message(message.chat.id, document_id)  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é file_id


    except:
        ...





if __name__ == '__main__':
    try:
        bot.polling(none_stop=True)
    except:
        ...
